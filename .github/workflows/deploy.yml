name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: "11"
        distribution: "adopt"
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Run Gradle Check
      run: ./gradlew check
    - name: Build with Gradle
      run: ./gradlew build

  docker:
    if: contains(github.ref, 'master')
    name: Publish - Docker Hub
    runs-on: ubuntu-18.04
    needs: [build]
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} 
             -p ${{ secrets.DOCKER_PASS }}
      - name: Build Docker image
        run: docker build -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
      - name: Publish Docker image
        run: docker push $REPO

  redeploy:
    name: Redeploy
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
    - name: running docker info
      uses: ironhalik/docker-over-ssh-action@v1
      with:
        user: fluffy
        host: ${{ secrets.DEPLOY_HOST }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        script: |
          docker info
          docker stack deploy --compose-file=docker-compose.yml stack
    #- name: Install SSH key
    #  uses: shimataro/ssh-key-action@v2
    #  with:
    #    key: ${{ secrets.DEPLOY_PRIV_KEY }}
    #    name: id_rsa # optional
    #    known_hosts: ${{ secrets.DEPLOY_KNOWN_HOSTS }}
    #    if_key_exists: fail
    #- name: Run re-deploy script
    #  run: ssh fluffy@${{ secrets.DEPLOY_HOST }}:./redeploy.sh
